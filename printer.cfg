[include shell_command.cfg]

#To use this config, during "make menuconfig" select the
# STM32F103 with a "28KiB bootloader" and serial (on USART1 PA10/PA9)
# communication.

# If you prefer a direct serial connection, in "make menuconfig"
# select "Enable extra low-level configuration options" and select
# serial (on USART3 PB11/PB10), which is broken out on the 10 pin IDC
# cable used for the LCD module as follows:
# 3: Tx, 4: Rx, 9: GND, 10: VCC

# Flash this firmware by copying "out/klipper.bin" to a SD card and
# turning on the printer with the card inserted. The firmware
# filename must end in ".bin" and must not match the last filename
# that was flashed.

#====================================================================
# INCLUDE MAINSAIL
#====================================================================

[include mainsail.cfg]

#====================================================================
# INCLUDE MACROS
#====================================================================

[include macros.cfg]

#====================================================================
# INCLUDE TIMELAPSE
#====================================================================

[include timelapse.cfg]

#====================================================================
# INCLUDE LED PROGRESS
#====================================================================

[include led_progress.cfg]

#====================================================================
# VIRTUAL SD CARD
#====================================================================

[virtual_sdcard]
path: ~/printer_data/gcodes

#====================================================================
# EXCLUDE OBJECT PLUGIN
#====================================================================

# The [exclude_object] module allows Klipper to exclude objects
# while a print is in progress. 

[exclude_object]

#====================================================================
# Respond Messages
#====================================================================

[respond]
#default_type: echo
#   Sets the default prefix of the "M118" and "RESPOND" output to one
#   of the following:
#       echo: "echo: " (This is the default)
#       command: "// "
#       error: "!! "
default_prefix: 
#   Directly sets the default prefix. If present, this value will
#   override the "default_type".


#====================================================================
# MCU
#====================================================================

[mcu]
serial: /dev/serial/by-id/usb-Klipper_stm32g0b1xx_1B001D000350415339373620-if00
#serial: /dev/serial/by-id/usb-1a86_USB_Serial-if00-port0 
restart_method: command

#====================================================================
# Raspberry Pi Temperature Display for Mainsail
#====================================================================

[temperature_sensor raspberry_pi]
sensor_type: temperature_host
min_temp: 10
max_temp: 100

[temperature_sensor mcu_temp]
sensor_type: temperature_mcu
min_temp: 0
max_temp: 100

#====================================================================
# PRINTER
#====================================================================

[printer]
kinematics: cartesian
max_velocity: 400
max_accel: 3500
max_accel_to_decel: 3500
max_z_velocity: 25
max_z_accel: 100
square_corner_velocity: 5

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PB5,  EXP1_3=PA9,   EXP1_5=PA10, EXP1_7=PB8, EXP1_9=<GND>,
    EXP1_2=PA15, EXP1_4=<RST>, EXP1_6=PB9,  EXP1_8=PD6, EXP1_10=<5V>

[output_pin beeper]
pin: PB5

#====================================================================
# NEOPIXEL
#====================================================================

[neopixel my_led]
pin: PA8
chain_count: 5
color_order: GRB
initial_RED: 1.0
initial_GREEN: 1.0
initial_BLUE: 1.0

#====================================================================
# STEPPER X
#====================================================================

[stepper_x]
step_pin: PB13
dir_pin: !PB12
enable_pin: !PB14
microsteps: 16
rotation_distance: 40
endstop_pin: ^PC0
position_endstop: -1
position_max: 250
position_min: -1
homing_speed: 40

[tmc2209 stepper_x]
uart_pin: PC11
tx_pin: PC10
uart_address: 0
run_current: 0.84
hold_current: 0.500
stealthchop_threshold: 999999

#====================================================================
# STEPPER Y
#====================================================================

[stepper_y]
step_pin: PB10
dir_pin: !PB2
enable_pin: !PB11
microsteps: 16
rotation_distance: 40
endstop_pin: ^PC1
position_endstop: -20
position_max: 225
position_min: -20
homing_speed: 40

[tmc2209 stepper_y]
uart_pin: PC11
tx_pin: PC10
uart_address: 2
run_current: 1.00
hold_current: 0.500
stealthchop_threshold: 999999

#====================================================================
# STEPPER Z
#====================================================================

[stepper_z]
step_pin: PB0
dir_pin: PC5
enable_pin: !PB1
microsteps: 16
rotation_distance: 8
# endstop_pin: ^PC2
# position_endstop: 0.0
endstop_pin: probe:z_virtual_endstop
position_max: 200
position_min: -5.0
homing_speed: 10
second_homing_speed: 1
homing_retract_dist: 5.0

[tmc2209 stepper_z]
uart_pin: PC11
tx_pin: PC10
uart_address: 1
run_current: 0.840
hold_current: 0.500
stealthchop_threshold: 999999

#====================================================================
# EXTRUDER
#====================================================================

[extruder]
#ORBITER V1.5
# MAX EXTRUSION RATE IS 8MM/S WITH 0.4MM NOZZLE BEFORE SKIPPING - ORBITER 1.5 + RED DRAGON HF HOOTEND
#max_extrude_only_distance: 100.0 # for rotation_distance calibration. Default is 50
# HGX 2.0. STEPPER=1.8 DEGREES, GEAR RATIO=9.54647:1, WHEEL DIAMETER=18MM, CERCUMFERENCE=56.5478MM = RD=5.9234251
max_extrude_only_distance: 125
max_extrude_only_velocity: 60
step_pin: PB3
dir_pin: PB4
enable_pin: !PD1
microsteps: 16
# rotation_distance:4.637 #ORBITER 1.5
rotation_distance:5.567 #5.923 #HGX 2.0 MINI (CALCULATED)
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PC8
# sensor_type: EPCOS 100K B57560G104F #RED DRAGON HF HOTEND
sensor_type: NTC 100K MGB18-104F39050L32 #RED DRAGON K1 PRO HOTEND
sensor_pin: PA0
#control: pid
#pid_Kp: 23.561
#pid_Ki: 1.208
#pid_Kd: 114.859
min_temp: 0
max_temp: 300 # Set to 300 for Sprite Pro Extruder
min_extrude_temp: 170
max_extrude_cross_section: 5

#====================================================================
# PRESSURE ADVANCE
#====================================================================

# It is recommended to calibrate your own pressure advance.
# See https://www.klipper3d.org/Pressure_Advance.html

#pressure_advance: .0465 # Overture PLA White
#pressure_advance: .0369 # Polymaker PLA Pro Teal
pressure_advance: .2 #ORBITER 1.5 start point
pressure_advance_smooth_time: 0.04

[tmc2209 extruder]
uart_pin: PC11
tx_pin: PC10
uart_address: 3
run_current: 1.100
hold_current: 0.500
stealthchop_threshold: 999999



#====================================================================
# BTT EDDY USB
#====================================================================

[mcu eddy]
serial: /dev/serial/by-id/usb-Klipper_rp2040_4550357129108B58-if00

[temperature_sensor btt_eddy_mcu]
sensor_type: temperature_mcu
sensor_mcu: eddy
min_temp: 10
max_temp: 100

[probe_eddy_current btt_eddy]
sensor_type: ldc1612
z_offset: 1.4
#i2c_address:
i2c_mcu: eddy
i2c_bus: i2c0f
x_offset: -45 # Set according to the actual offset relative to the nozzle
y_offset: 8 # Set according to the actual offset relative to the nozzle  << change to 0 with new tool head
data_rate: 500

[temperature_probe btt_eddy]
sensor_type: Generic 3950
sensor_pin: eddy:gpio26
horizontal_move_z: 2 # DEFAULT=2

# [bed_mesh]
# horizontal_move_z: 4 # DEFAULT=2

#====================================================================
# BED MESH PARAMETERS
#====================================================================

[bed_mesh]
speed: 300 # 250
horizontal_move_z: 2 # SEE EDDY SECTION
mesh_min: 30,30
mesh_max: 180,180
probe_count: 9,9
algorithm: bicubic
fade_start: 1
fade_end: 10
fade_target: 0

#====================================================================
# SAFE Z HOME
#====================================================================

[safe_z_home]
home_xy_position: 152, 106
speed: 200
z_hop: 10
z_hop_speed: 25
# move_to_previous: true

#====================================================================
# EDDY HOMING OPTIONS
#====================================================================

# Uncomment this if you are using Eddy as the probe AND the homing endstop AND would like to use the beta z-offset control
[save_variables]
filename: ~/printer_data/config/variables.cfg



# Uncomment this if you are using Eddy as the probe AND the homing endstop
[force_move]
enable_force_move: True # Allows a user to move the z axis down if they have no other means of homing Z and need to calibrate the Eddy.

# Uncomment this if you are using Eddy as the probe AND the homing endstop AND would like to use the beta z-offset control
[delayed_gcode RESTORE_PROBE_OFFSET]
initial_duration: 1.
gcode:
  {% set svv = printer.save_variables.variables %}
  {% if not printer["gcode_macro SET_GCODE_OFFSET"].restored %}
    SET_GCODE_VARIABLE MACRO=SET_GCODE_OFFSET VARIABLE=runtime_offset VALUE={ svv.nvm_offset|default(0) }
    SET_GCODE_VARIABLE MACRO=SET_GCODE_OFFSET VARIABLE=restored VALUE=True
  {% endif %}

[gcode_macro G28]
rename_existing: G28.1
gcode:
  #SET_GCODE_VARIABLE MACRO=_KNOMI_STATUS VARIABLE=homing VALUE=True # Uncomment this if using a KNOMI and then remove the G28 macro from the KNOMI.cfg
  G28.1 {rawparams}
  {% if not rawparams or (rawparams and 'Z' in rawparams) %}
    PROBE
    SET_Z_FROM_PROBE
  {% endif %}
  #SET_GCODE_VARIABLE MACRO=_KNOMI_STATUS VARIABLE=homing VALUE=False # Uncomment this if using a KNOMI and then remove the G28 macro from the KNOMI.cfg



# Uncomment this if you are using Eddy as the probe AND the homing endstop
[gcode_macro SET_Z_FROM_PROBE]
gcode:
    {% set cf = printer.configfile.settings %}
    SET_GCODE_OFFSET_ORIG Z={printer.probe.last_z_result - cf['probe_eddy_current btt_eddy'].z_offset + printer["gcode_macro SET_GCODE_OFFSET"].runtime_offset}



# Uncomment this if you are using Eddy as the probe AND the homing endstop AND would like to use the beta z-offset control
[gcode_macro Z_OFFSET_APPLY_PROBE]
rename_existing: Z_OFFSET_APPLY_PROBE_ORIG
gcode:
  SAVE_VARIABLE VARIABLE=nvm_offset VALUE={ printer["gcode_macro SET_GCODE_OFFSET"].runtime_offset }



# Uncomment the lines in this macro if you are using Eddy as the probe AND the homing endstop AND would like to use the beta z-offset control
[gcode_macro SET_GCODE_OFFSET]
rename_existing: SET_GCODE_OFFSET_ORIG
variable_restored: False  # Mark whether the var has been restored from NVM
variable_runtime_offset: 0
gcode:
  {% if params.Z_ADJUST %}
    SET_GCODE_VARIABLE MACRO=SET_GCODE_OFFSET VARIABLE=runtime_offset VALUE={ printer["gcode_macro SET_GCODE_OFFSET"].runtime_offset + params.Z_ADJUST|float }
  {% endif %}
  {% if params.Z %} 
    {% set paramList = rawparams.split() %}
    {% for i in range(paramList|length) %}
      {% if paramList[i]=="Z=0" %}
        {% set temp=paramList.pop(i) %}
        {% set temp="Z_ADJUST=" + (-printer["gcode_macro SET_GCODE_OFFSET"].runtime_offset)|string %}
        {% if paramList.append(temp) %}{% endif %}
      {% endif %}
    {% endfor %}
    {% set rawparams=paramList|join(' ') %}
    SET_GCODE_VARIABLE MACRO=SET_GCODE_OFFSET VARIABLE=runtime_offset VALUE=0
  {% endif %}
  SET_GCODE_OFFSET_ORIG { rawparams }



# This macro automates a lot of the frequency mapping process and simplifies the steps significantly.
[gcode_macro PROBE_EDDY_CURRENT_CALIBRATE_AUTO]
gcode:
  BED_MESH_CLEAR
  G28 X Y
  G1 X{ printer.toolhead.axis_maximum.x/2 } Y{ printer.toolhead.axis_maximum.y/2 } F6000
  {% if 'z' not in printer.toolhead.homed_axes %}
    SET_KINEMATIC_POSITION Z={ printer.toolhead.axis_maximum.z-1 } # Allows the user to work it down until it touches.
  {% endif %}
  PROBE_EDDY_CURRENT_CALIBRATE {rawparams}

#This macro is optional but useful if you want to run a rapid scan before each print. Simply uncomment it and add BED_MESH_SCAN to your print start code.
[gcode_macro BED_MESH_CALIBRATE]
rename_existing: BTT_BED_MESH_CALIBRATE
gcode:
#  SET_GCODE_VARIABLE MACRO=_KNOMI_STATUS VARIABLE=probing VALUE=True #Only uncomment this line if using a KNOMI and then remove the BED_MESH_CALIBRATE macro from KNOMI.cfg
  BTT_BED_MESH_CALIBRATE SCAN_MODE=rapid METHOD=scan
#  SET_GCODE_VARIABLE MACRO=_KNOMI_STATUS VARIABLE=probing VALUE=False #Only uncomment this line if using a KNOMI and then remove the BED_MESH_CALIBRATE macro from KNOMI.cfg

#====================================================================
# BL TOUCH
#====================================================================

#[bltouch]
#sensor_pin: ^PB1
#control_pin: PB0
#x_offset: -42.0
#y_offset: -4.0
## z_offset: 4  # z_offset is saved in SAVE_CONFIG section below
#speed:20
#samples:3
#samples_result: median
#samples_tolerance: 0.0075
#samples_tolerance_retries: 10
#probe_with_touch_mode: false
#stow_on_each_sample: true

#====================================================================
# FILAMENT RUN OUT SENSOR
#====================================================================

[filament_motion_sensor BTT]
#[filament_motion_sensor encoder_sensor]
switch_pin: PA4
detection_length: 14.0
# The minimum length of filament pulled through the sensor to trigger
# a state change on the switch_pin
# Default is 7 mm.
extruder: extruder
# The name of the extruder section this sensor is associated with.
# This parameter must be provided.
pause_on_runout:true
event_delay: 5.0
runout_gcode:
  PAUSE # [pause_resume] is required in printer.cfg
  M117 Filament encoder runout
insert_gcode:
  M117 Filament encoder inserted
#event_delay:
#pause_delay:
# See the "filament_switch_sensor" section for a description of the
# above parameters.

#====================================================================
# PAUSE RESUME
#====================================================================

[pause_resume]
recover_velocity: 25

#====================================================================
# BED
#====================================================================

[heater_bed]
heater_pin: PC9
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC4
#control: pid
#pid_Kp: 54.027
#pid_Ki: 0.770
#pid_Kd: 948.182
min_temp: 0
max_temp: 130

#====================================================================
# FANS
#====================================================================

#pin:
#max_power:
#shutdown_speed:
#cycle_time:
#hardware_pwm:
#kick_start_time:
#off_below:
#tachometer_pin:
#tachometer_ppr:
#tachometer_poll_interval:
#enable_pin:
#idle_timeout:

[heater_fan controller_fan]
# MOVE EXTRUDER FAN TO THIS PIN (BOARD FAN PIN)
pin: PB15
heater: heater_bed
heater_temp: 45.0

[heater_fan nozzle_cooling_fan]
pin: PC7
max_power: 0.4 # 1.0 WILL CURL UP FIRST LAYER!
kick_start_time: 2.000
shutdown_speed: 0.0

[fan]
pin: PC6
# PART COOLING FAN

#====================================================================
# SCREW ADJUSTMENT
#====================================================================

[bed_screws]
screw1: 25, 205 # Using rear left to take measurements as harder to reach
screw1_name: rear left screw
screw2: 195, 205
screw2_name: rear right screw
screw3: 195, 35
screw3_name: front right screw
screw4: 25, 35
screw4_name: front left screw

[screws_tilt_adjust]
screw1: 57, 229
screw1_name: rear left screw
screw2: 227, 229
screw2_name: rear right screw
screw3: 227, 70
screw3_name: front right screw
screw4: 57, 70
screw4_name: front left screw
horizontal_move_z: 10
speed: 50
screw_thread: CW-M4 # Use CW for Clowise and CCW for Counter Clockwise 


#====================================================================
# IDLE TIMEOUT
#====================================================================

# The [idle_timeout] module allows Klipper to automatically shut down
# the printer after a period of inactivity. This can be useful for 
# when needing to extend time between filament swaps or pauses.
# time-out in seconds, 30 minutes for safety reasons adjust
# at you own risk. 

# [idle_timeout]

# gcode:
#   {% if printer.pause_resume.is_paused %}
#     M118 Idle timeout while paused, turning off hotend
#     SET_HEATER_TEMPERATURE HEATER=extruder TARGET=0
#   {% else %}
#     M118 Idle timeout
#     TURN_OFF_HEATERS
#     M84
#   {% endif %}
# timeout: 1800 

#====================================================================
# INPUT SHAPER
#====================================================================

# Klipper supports Input Shaping - a technique that can be used to
# reduce ringing (also known as echoing, ghosting or rippling) in
# prints. Ringing is a surface printing defect when, typically,
# elements like edges repeat themselves on a printed surface as a
# subtle 'echo':

# Every printer is different and the ringing frequency depends on
# the printer's mechanical properties. The ringing frequency can be
# measured by printing a simple test object and measuring the
# distance between the echoes. The ringing frequency is typically
# between 50 and 100 Hz.

# https://www.klipper3d.org/Resonance_Compensation.html

# Uncomment the following lines to enable input shaping. The
# shaper_freq_x and shaper_freq_y parameters should be set to the
# ringing frequency of the printer. 

# MANUAL SETUP
[input_shaper]
shaper_freq_x: 58.8
shaper_type_x: mzv
shaper_freq_y: 35.6
shaper_type_y: mzv

# # ADXL345 SETUP
# [input_shaper]
# shaper_freq_x: 68.8
# shaper_type_x: mzv
# shaper_freq_y: 44.4
# shaper_type_y: mzv

# Set up your accelerometer using the following link https://www.klipper3d.org/Measuring_Resonances.html

[mcu rpi]
serial: /tmp/klipper_host_mcu

[adxl345]
cs_pin: rpi:None

[resonance_tester]
accel_chip: adxl345
probe_points: 117, 117, 20  # home probe point

#====================================================================
# SAVE_CONFIG  *** IMPORTANT ***
#====================================================================

# To avoid any potential errors, it's best to include the
# SAVE_CONFIG information provided below. 
# Additionally, it's highly recommended that you tune your own PID
#  values and set the z-offset before starting any printing tasks.
# This will help ensure that your machine performs optimally and 
# that you achieve the best possible results.

#====================================================================
# KLIPPER BACKUP MACRO
#====================================================================

[gcode_macro update_git]
gcode:
    {% set message = params.MESSAGE|default() %}
    {% if message %}
        RUN_SHELL_COMMAND CMD=update_git_script_message PARAMS="'{params.MESSAGE}'"
    {% else %}
        RUN_SHELL_COMMAND CMD=update_git_script
    {% endif %}

[gcode_shell_command update_git_script]
command: bash -c "bash $HOME/klipper-backup/script.sh"
timeout: 90.0
verbose: True

[gcode_shell_command update_git_script_message]
command: bash -c "bash $HOME/klipper-backup/script.sh $0"
timeout: 90.0
verbose: True

[include moonraker_obico_macros.cfg]

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 35.815
#*# pid_ki = 10.853
#*# pid_kd = 29.547
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 67.368
#*# pid_ki = 0.796
#*# pid_kd = 1424.833
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	-0.019333, -0.025298, -0.012172, 0.001793, 0.004657, 0.005322, -0.006568, -0.023118, -0.036681
#*# 	-0.016072, -0.020655, -0.002996, 0.006390, 0.009531, 0.016003, 0.000494, -0.017234, -0.040841
#*# 	-0.009306, -0.008723, 0.003075, 0.008921, 0.016594, 0.022672, 0.006168, -0.008900, -0.020019
#*# 	-0.003920, -0.010759, 0.001061, 0.007652, 0.009692, 0.018823, 0.001930, -0.009388, -0.027600
#*# 	-0.017372, -0.004579, 0.008713, 0.010513, 0.019664, 0.011871, 0.004260, -0.016290, -0.022497
#*# 	-0.005663, -0.006194, 0.002294, 0.009448, 0.011379, 0.012016, 0.000386, -0.009865, -0.027227
#*# 	-0.005778, 0.001402, 0.004399, 0.013417, 0.011373, 0.008692, 0.005981, -0.012881, -0.015552
#*# 	-0.001568, -0.001943, 0.009301, 0.014045, 0.016406, 0.018569, 0.010721, -0.007153, -0.020138
#*# 	-0.005424, -0.005249, 0.006928, 0.022239, 0.020338, 0.016928, 0.012010, 0.001669, -0.007117
#*# x_count = 9
#*# y_count = 9
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 30.0
#*# max_x = 180.0
#*# min_y = 30.0
#*# max_y = 180.0
#*#
#*# [probe_eddy_current btt_eddy]
#*# reg_drive_current = 15
#*# calibrate =
#*# 	0.050000:3330495.502,0.100000:3327481.813,0.150000:3324743.046,
#*# 	0.200000:3321900.604,0.250000:3319194.617,0.300000:3316566.200,
#*# 	0.350000:3313978.943,0.400000:3311285.320,0.450000:3308520.593,
#*# 	0.500000:3305956.509,0.550000:3303210.642,0.600000:3300727.548,
#*# 	0.650000:3298400.697,0.700000:3296091.097,0.750000:3293846.651,
#*# 	0.800000:3291865.160,0.850000:3289838.254,0.900000:3287807.252,
#*# 	0.950000:3285855.949,1.000000:3283956.909,1.050000:3282170.176,
#*# 	1.100000:3280388.796,1.150000:3278689.748,1.200000:3276997.962,
#*# 	1.250000:3275285.220,1.300000:3273616.024,1.350000:3272069.886,
#*# 	1.400000:3270520.298,1.450000:3269119.040,1.500000:3267638.607,
#*# 	1.550000:3266241.388,1.600000:3264854.468,1.650000:3263565.918,
#*# 	1.700000:3262291.112,1.750000:3261013.777,1.800000:3259788.576,
#*# 	1.850000:3258522.557,1.900000:3257342.369,1.950000:3256175.451,
#*# 	2.000000:3255136.846,2.050000:3254016.880,2.100000:3252919.493,
#*# 	2.150000:3251881.450,2.200000:3250941.345,2.250000:3249950.634,
#*# 	2.300000:3248919.731,2.350000:3247983.963,2.400000:3247082.947,
#*# 	2.450000:3246160.498,2.500000:3245303.114,2.550000:3244409.021,
#*# 	2.600000:3243625.090,2.650000:3242838.961,2.700000:3242085.368,
#*# 	2.750000:3241306.497,2.800000:3240555.041,2.850000:3239842.830,
#*# 	2.900000:3239094.984,2.950000:3238441.256,3.000000:3237726.907,
#*# 	3.050000:3237093.091,3.100000:3236513.865,3.150000:3235846.272,
#*# 	3.200000:3235241.177,3.250000:3234663.670,3.300000:3234078.385,
#*# 	3.350000:3233465.307,3.400000:3232914.493,3.450000:3232375.958,
#*# 	3.500000:3231872.563,3.550000:3231388.576,3.600000:3230885.900,
#*# 	3.650000:3230392.854,3.700000:3229937.793,3.750000:3229455.692,
#*# 	3.800000:3228954.420,3.850000:3228505.920,3.900000:3228114.452,
#*# 	3.950000:3227656.123,4.000000:3227236.537,4.050000:3226795.181
#*# calibration_temp = 50.539705
#*# drift_calibration =
#*# 	3378983.412076, -1873.455130, 15.336437
#*# 	3340058.785236, -1347.157262, 10.259654
#*# 	3303761.253954, -763.109983, 5.275688
#*# 	3285002.285847, -672.958039, 4.923947
#*# 	3265455.757373, -397.790054, 2.575557
#*# 	3254141.828758, -337.279045, 2.273600
#*# 	3242020.958532, -152.023176, 0.627809
#*# 	3234524.306467, -90.018128, 0.182897
#*# 	3231556.224668, -157.954742, 0.952230
#*# drift_calibration_min_temp = 42.26927504547375
